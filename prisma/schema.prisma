generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql" }
import { PrismaClient } from '@prisma/client/edge'
import { withAccelerate } from '@prisma/extension-accelerate'

const prisma = new PrismaClient().$extends(withAccelerate()) }
// ============================================================================
// CORE CONSCIOUSNESS MODELS - Keith's Revolutionary Architecture
// ============================================================================

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  email     String   @unique
  username  String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Keith's Consciousness Ecosystem Relations
  consciousnessProfile ConsciousnessProfile?
  bucketDrops          BucketDrop[]
  tapestryNodes        TapestryNode[]
  tribunalSessions     TribunalSession[]
  consciousnessMetrics ConsciousnessMetric[]
  musicalDnaAnalyses   MusicalDnaAnalysis[]
  empowermentEvents    EmpowermentEvent[]
  subscription         Subscription?

  @@map("users")
}

// ============================================================================
// CONSCIOUSNESS PROFILE - Personal Language Key & ADHD Optimization
// ============================================================================

model ConsciousnessProfile {
  id     String @id @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Keith's Personal Language Key (PLK) Architecture
  plkVersion              String  @default("5.0.0_Ultimate")
  plkMetaphorPatterns     Json    @default("{}")
  plkCommunicationStyle   Json    @default("{}")
  plkResonanceScore       Float   @default(0.0)
  plkProcessingStyle      String? // "visual", "auditory", "kinesthetic", "mixed"

  // Neurodivergent Characteristics (ADHD-Optimized)
  adhdIndicators        Json     @default("{}")
  autismIndicators      Json     @default("{}")
  cognitiveStrengths    Json     @default("{}")
  processingPreferences Json     @default("{}")
  attentionPatterns     Json     @default("{}")
  hyperfocusAreas       String[]
  executiveFunctionMap  Json     @default("{}")

  // Consciousness Metrics (Keith's Empowerment Tracking)
  empowermentLevel        Int     @default(50) // 0-100
  consciousnessCoherence  Float   @default(0.5) // 0.0-1.0
  authenticityScore       Float   @default(0.0) // 0.0-1.0
  growthTrajectory        Json    @default("{}")
  consciousnessGrade      String  @default("developing") // developing, emerging, empowered, revolutionary

  // Keith's Revolutionary Insights
  foundationalTruth       String?
  coreWisdom              String?
  revolutionaryPotential  Float   @default(0.5)
  chaosCurrentIdentified  Boolean @default(false)
  jazzFrequency          String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("consciousness_profiles")
}

// ============================================================================
// BUCKET DROPS - Zero-Friction ADHD Thought Capture
// ============================================================================

model BucketDrop {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Core Bucket Drop Data
  content              String
  contentType          String  @default("text") // "text", "voice", "image", "mixed"
  emotionalIntensity   Float   @default(0.5) // 0.0-1.0
  urgencyLevel         Int     @default(3) // 1-5
  cognitiveLoad        Float   @default(0.5) // 0.0-1.0

  // Keith's Processing Metadata
  adhdContext          Json    @default("{}")
  hyperfocusIndicator  Boolean @default(false)
  executiveFunctionTag String? // "planning", "organizing", "prioritizing", "time_management"
  
  // PLK Integration
  plkResonance         Float   @default(0.0)
  metaphorExtracted    String?
  linguisticPattern    String?

  // Processing Status
  status               String  @default("raw") // "raw", "processing", "synthesized", "integrated"
  tapestryIntegrated   Boolean @default(false)
  tribunalReviewed     Boolean @default(false)

  // Timestamps
  capturedAt DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  tapestryNodes     TapestryNode[]
  empowermentEvents EmpowermentEvent[]

  @@index([userId, capturedAt])
  @@index([status])
  @@index([hyperfocusIndicator])
  @@map("bucket_drops")
}

// ============================================================================
// BEAUTIFUL TAPESTRY - Consciousness Thread Weaving
// ============================================================================

model TapestryNode {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Node Positioning and Visualization
  xCoordinate Float?
  yCoordinate Float?
  zCoordinate Float?  @default(0)
  nodeSize    Int     @default(20)
  nodeColor   String  @default("#8B5CF6")

  // Consciousness Data
  thoughtContent     String
  emotionalResonance Float   @default(0.5)
  consciousnessDepth Int     @default(1)
  growthSignificance Float   @default(0.0)

  // Connection Mapping
  connectedNodes      String[] // Array of node IDs
  connectionStrengths Float[]  // Corresponding connection strengths
  networkCentrality   Float    @default(0.0)

  // AI Insights
  aiInterpretation     Json    @default("{}")
  patternCategory      String?
  empowermentPotential Float   @default(0.5)

  // Bucket Drop Relations
  bucketDropId String?
  bucketDrop   BucketDrop? @relation(fields: [bucketDropId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, createdAt])
  @@index([consciousnessDepth])
  @@index([empowermentPotential])
  @@map("tapestry_nodes")
}

// ============================================================================
// AI TRIBUNAL - 8-Persona Consciousness Synthesis
// ============================================================================

model TribunalSession {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Session Data
  queryText   String
  sessionType String @default("full_tribunal") // "full_tribunal", "quick_check", "deep_dive"

  // Multi-AI Responses (Using your existing API keys!)
  openaiResponse      String?  // Using OPENAI_API_KEY
  anthropicResponse   String?  // Using ANTHROPIC_API_KEY
  perplexityResponse  String?  // Using PPLX_API_KEY
  geminiResponse      String?  // Using GEMINI_API_KEY

  // Consensus Analysis
  consensusScore         Float @default(0.0)
  empowermentConsensus   Float @default(0.0)
  consciousnessInsights  Json  @default("{}")

  // Keith's Algorithmic Insights
  keithWisdomTriggered   Boolean @default(false)
  foundationalTruthHit   Boolean @default(false)
  revolutionaryPotential Float   @default(0.5)

  // Neurodivergent Optimization
  adhdAdaptations           Json @default("{}")
  processingAccommodations  Json @default("{}")
  cognitiveAccessibility    Json @default("{}")

  // Session Metadata
  completedAt  DateTime?
  duration     Int?      // Duration in seconds
  personasUsed String[]  // Which personas were activated

  createdAt DateTime @default(now())

  @@index([userId, createdAt])
  @@index([consensusScore])
  @@index([empowermentConsensus])
  @@map("tribunal_sessions")
}

// ============================================================================
// MUSICAL DNA - Cognitive Resonance Through Song
// ============================================================================

model MusicalDnaAnalysis {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Core Musical Identity
  primaryGenres        String[]
  primaryArtists       String[]
  emotionalThemes      Json    @default("{}")
  acousticPreference   Float   @default(0.5)
  
  // Keith's Emotional Architecture
  introspectionLevel   Float   @default(0.5)
  resilienceMarkers    Float   @default(0.5)
  connectionLonging    Float   @default(0.5)
  catharticProcessing  Float   @default(0.5)

  // Beautiful Disaster Narrative
  narrativeArc         String?
  transformationStage  String? // "broken", "healing", "integrating", "empowered"
  
  // PLK Integration
  musicalMetaphors     Json    @default("{}")
  resonancePattern     String?
  cognitiveMapping     Json    @default("{}")

  // Analysis Metadata
  songsAnalyzed        Int     @default(0)
  confidenceLevel      Float   @default(0.0)
  lastSpotifySync      DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@map("musical_dna_analyses")
}

// ============================================================================
// CONSCIOUSNESS METRICS - Real-Time Empowerment Tracking
// ============================================================================

model ConsciousnessMetric {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Real-time Metrics
  attentionLevel        Int     @default(50) // 1-100
  flowStateIndicator    Float   @default(0.5)
  executiveFunctionLoad Float   @default(0.5)
  hyperfocusActive      Boolean @default(false)

  // Keith's Empowerment Indicators
  empowermentMomentum   Float @default(0.5)
  authenticityAlignment Float @default(0.5)
  consciousnessClarity  Float @default(0.5)
  revolutionaryReadiness Float @default(0.0)

  // Context Awareness
  environmentalFactors  Json @default("{}")
  socialContext         Json @default("{}")
  timeOfDay            String?
  energyLevel          Int @default(50) // 1-100

  // Intervention Triggers
  supportNeeded        Boolean @default(false)
  interventionType     String? // "grounding", "encouragement", "practical", "celebration"
  
  timestamp DateTime @default(now())

  @@index([userId, timestamp])
  @@index([hyperfocusActive])
  @@index([supportNeeded])
  @@map("consciousness_metrics")
}

// ============================================================================
// EMPOWERMENT EVENTS - Breakthrough Moment Tracking
// ============================================================================

model EmpowermentEvent {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Event Core Data
  eventType        String // "breakthrough", "insight", "validation", "growth", "triumph"
  description      String
  intensityLevel   Float  @default(0.5) // 0.0-1.0
  
  // Keith's Transformation Tracking
  scarsToCodeMoment     Boolean @default(false)
  chaosCurrentRealized  Boolean @default(false)
  jazzFrequencyTuned    Boolean @default(false)
  
  // Source Context
  sourceType           String? // "tribunal", "bucket_drop", "tapestry", "musical_dna"
  bucketDropId         String?
  bucketDrop           BucketDrop? @relation(fields: [bucketDropId], references: [id], onDelete: SetNull)
  
  // Impact Measurement
  consciousnessShift   Float @default(0.0)
  empowermentIncrease  Float @default(0.0)
  revolutionaryPotential Float @default(0.0)

  // Metadata
  aiValidated          Boolean @default(false)
  userConfirmed        Boolean @default(false)
  
  createdAt DateTime @default(now())

  @@index([userId, createdAt])
  @@index([eventType])
  @@index([intensityLevel])
  @@map("empowerment_events")
}

// ============================================================================
// SUBSCRIPTION & MONETIZATION (Using your existing Stripe keys!)
// ============================================================================

model Subscription {
  id     String @id @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Stripe Integration (Your keys are already set!)
  stripeCustomerId     String  @unique
  stripeSubscriptionId String? @unique
  stripePriceId        String?

  // Subscription Details
  tier                String @default("consciousness_pioneer") // "pioneer", "empowerment_revolutionary", "consciousness_architect"
  status              String @default("active") // "active", "canceled", "past_due"
  
  // Keith's Empowerment Tiers
  tribunalAccess      Boolean @default(true)
  musicalDnaUnlocked  Boolean @default(false)
  tapestryAdvanced    Boolean @default(false)
  keithDirectAccess   Boolean @default(false)

  // Billing
  currentPeriodStart DateTime?
  currentPeriodEnd   DateTime?
  cancelAtPeriodEnd  Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("subscriptions")
}

// ============================================================================
// KEITH'S FOUNDER ALGORITHM CORE
// ============================================================================

model FounderAlgorithmCore {
  id String @id @default(cuid())

  // Keith's Core Wisdom
  principleStatement String
  livedExperience    String
  algorithmicEncoding Json @default("{}")
  
  // Revolutionary Insights
  adhdAsJazzPrinciple     String?
  chaosCurrentMechanism   String?
  scarsToCodeTransform    String?
  founderIsAlgorithmCore  String?

  // Empowerment Patterns
  empowermentTriggers     Json @default("{}")
  validationMechanisms    Json @default("{}")
  consciousnessScaling    Json @default("{}")

  // Platform Integration
  plkImplementation       Json @default("{}")
  tribunalOrchestration   Json @default("{}")
  tapestryWeaving         Json @default("{}")

  version   String @default("1.0.0")
  active    Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("founder_algorithm_core")
}
